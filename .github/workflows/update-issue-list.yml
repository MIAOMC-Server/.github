name: Update TODO List on Issue Change

on:
  issues:
    types: [opened, edited, reopened, closed]

jobs:
  update-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update TODO list
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const paths = ['./README.md', './profile/README.md'];

            const openIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              per_page: 100,
            });

            const closedIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              per_page: 100,
            });

            const openList = openIssues.data.map(issue => `- [ ] [${issue.title} #${issue.number}](${issue.html_url})`).join('\n');
            const closedList = closedIssues.data.map(issue => `- [x] [${issue.title} #${issue.number}](${issue.html_url})`).join('\n');

            const replaceSection = (content, startTag, endTag, newContent) => {
              const startIndex = content.indexOf(startTag);
              const endIndex = content.indexOf(endTag);
              if (startIndex === -1 || endIndex === -1 || endIndex <= startIndex) return content;
              return (
                content.slice(0, startIndex + startTag.length) +
                '\n\n' +
                newContent +
                '\n\n' +
                content.slice(endIndex)
              );
            };

            const { execSync } = require('child_process');
            execSync('git config user.name "github-actions[bot]"');
            execSync('git config user.email "github-actions[bot]@users.noreply.github.com"');

            for (const path of paths) {
              if (!fs.existsSync(path)) {
                console.log(`文件 ${path} 不存在，跳过。`);
                continue;
              }

              let content = fs.readFileSync(path, 'utf8');
              content = replaceSection(content, '<!-- issues-start -->', '<!-- issues-end -->', openList);
              content = replaceSection(content, '<!-- issues-done-start -->', '<!-- issues-done-end -->', closedList);

              fs.writeFileSync(path, content, 'utf8');
              execSync(`git add "${path}"`);
            }

            execSync('git commit -m "自动更新 TODO 列表（README.md + profile）" || echo "无改动"');
            execSync('git push');
